#!/bin/sh

. $base_/menu "network" "netcfg"

pwd=$PWD

getaddr()
{
	ifconfig $1 | while read line; do
		i=$((i + 1))
		if [ $i -eq 1 ]; then
			continue
		fi
		case $line in
		inet*) index_ ' ' 2 "$line"; break;;
		*) echo "0.0.0.0";;
		esac
	done
}

network=''
state=''
activefg='#304A67'
wlanip=''

getname()
{
	wlanip=''
	if ! wpa_cli status >$pwd/$1 2>&1; then
		network='<span style=color:red;>error</span>'
		return
	fi
	while read line; do
		case $line in
		ssid=*) network=$(getval_ '=' $line);;
		wpa_state=*) state=$(getval_ '=' $line);;
		ip_address=*) wlanip=$(getval_ '= ' $line);;
		esac
	done < $pwd/$1
	if [ "$state" != "COMPLETED" ]; then
		state='&#xf128;'
		activefg='#DE5958'
		network=$state
	fi
}

wlaninfo()
{
	local caps="eap
pairwise
group
key_mgmt
proto
auth_alg
channels
freq
modes
"
	if ! wpa_cli interface $1 >/dev/null 2>&1; then
		return
	fi
	for cap in $caps; do
		echo "$cap: "
		wpa_cli get_capability $cap | grep -vi "selected interface"
		echo "--"
	done
}

ip4style="type=text maxlength=15 size=11"

cd /sys/class/net/
echo "<table class=blank>
<tr>
<td>
<table class=blank>
<tr>
<td class=info>interface</td>
<td class=info>address</td>
<td class=info>netmask</td>
<td class=info>broadcast</td>
<td class=info style=text-align:center;>
<div class=tooltip>auto<span class=tooltiptext>automatic configuration</span>
</div>
</td>
<td class=info></td>
<td class=info style=text-align:center;>status</td>
</tr>
<tr><td></td></tr>"
row=0
for iface in *; do
	type=0
	read type < $iface/type
	if [ $type -ne 1 ]; then
		continue
	fi
	class=$(alter_ $row)
	row=$((row + 1))
	status=/files/${iface}-status.txt
	$pwd/$base_/getip $iface | while read ip mask bcast hw; do
		echo '<tr>'
		if [ -d $iface/wireless ]; then
			type=2
			title=wireless
			glyph='&#xf1eb;'
			disabled=disabled
			checked=checked
			readonly=readonly
			cmd=iwup
			for i in 1 2 3 4 5 6 7 8; do
				getname $status
				if [ -n "$wlanip" ]; then
					ip=$wlanip
					break
				fi
				sleep 1
			done
			if [ -n "$ip" ]; then
				input="class=active"
				astyle="style=color:#2764a9;border-color:#2764a9;"
			else
				state='&#xf128;'
				activefg='#DE5958'
				network=$state
				astyle="style=color:#333;"
			fi
			echo "List of $iface capabilities
" > $pwd/files/$iface-info.txt
			wlaninfo >> $pwd/files/$iface-info.txt
		else
			type=1
			title=wired
			glyph='&#xf0e8;'
			disabled=''
			checked=''
			readonly=''
			cmd=ifup
			read network < $iface/operstate
			if [ "$network" = "up" ]; then
				input="class=active"
				network='&#xf0c1;'
				astyle="style=color:#36a927;border-color:#36a927;"
			else
				network='&#xf127;'
				astyle="style=color:#333;"
			fi
			ifconfig $iface >$pwd/$status 2>&1
		fi
		if [ "$ip" = '-' ]; then
			ip=''
		fi
		if [ "$mask" = '-' ]; then
			mask=''
		fi
		if [ "$bcast" = '-' ]; then
			bcast=''
		fi
		echo "<td $class>
<div>
<a class=hide id=hide$iface href=#hide$iface $astyle>$glyph $iface</a>
<div class=details>
<table style=margin:0;padding:0;>
<tr>
<td>
<a class=plain id=show$iface href=#show$iface $astyle>$glyph $iface &nbsp;</a>
</td>
<td>
<form action=cgi>
<input type=hidden name=cmd value=ifdown>
<input type=hidden name=dev value=$iface>
<input class=symbol type=submit value=&#xf08b; title=disconnect>
</form>
</td>
</tr>
</table>
</div>
</div>
</td>
<form action=cgi>
<input type=hidden name=cmd value=$cmd>
<input type=hidden name=dev value=$iface>
<td $class><input $ip4style name=inet value='$ip' $readonly></td>
<td $class><input $ip4style name=mask value='$mask' $readonly></td>
<td $class><input $ip4style name=bcast value='$bcast' $readonly></td>
<td $class><input type=checkbox name=auto $checked $disabled></td>
<td $class style=text-align:center;>"
	if [ $type -eq 1 ]; then
		echo "<input class=symbol type=submit value=&#xf0c7; title=apply>"
	else
		echo "<input class=symbol type=submit value=&#xf021; title=scan>"
	fi
	echo "</td>
<td $class style=text-align:center;>
<a class=menu href=$status title=details>$network</a>
</td>
</form>
</tr>"
	done
done
echo '</table>
</td>
</tr>'
cd $pwd

if [ $# -eq 2 ]; then
	for i in 1 2 3; do # 3 attempts to recover
		iface=$2
		err=$dir_/${iface}.err
		wpa_cli select $iface >$err 2>&1
		if [ $? -eq 0 ]; then
			. $base_/wlancfg
			break
		else
			echo "<tr><td></td></tr>
<tr><td>
<pre><strong>[$i] wpa_cli</strong>:"
			cat $dir_/${iface}.err
			echo -n "<strong>recovering...</strong>"
			sudo /etc/wpa_supplicant/wpa_reconfigure default >$err 2>&1
			echo '</pre>
</td>
</tr>'
		fi
	done
fi

echo '</table>'

. $base_/tail
