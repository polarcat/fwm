#!/bin/sh

. $FWM_HOME/lib/menu-utils

normbg
normfg
notebg

ifs_=$IFS
tmp_=$FWM_HOME/tmp/volume
out_=$tmp_/menu
inf_=$tmp_/info
max_=0
cur_=0
pct_=''
cid_=''
icon_=""

mkdir -p $tmp_

setpct() { pct_=$(($cur_ * 100 / $max_)); }
setmax() { max_=$1; }
setcur() { cur_=$2; }
volume() { amixer cset "$2" "$1,$1" >/dev/null; }

default()
{
	local cid="$1"

	amixer cget $cid | while read line; do
		setmax0() { max=$1; }
		setmax() { IFS=','; setmax0 $6; }
		case $line in
		*values*min*max*) IFS='='; setmax $line;;
		esac

		if [ -n "$max" ]; then
			volume "$max" "$cid"
			return
		fi
	done
}

custom()
{
	local vol=$(($max_ * $1 / 100))

	if [ $1 -ge 100 ]; then
		color=$notebg_
	elif [ $1 -le 0 ]; then
		color=$(printf "0x%x" $((normbg_ + 0x202020)))
	elif [ $1 -le 25 ]; then
		color=$(printf "0x%x" $((normbg_ + 0x404040)))
	else
		color=$normfg_
	fi

	volume "$vol" "$cid_"
	updatedock mixer-dock $icon_ $color
}

mute()
{
	volume 0 "$cid_"
	color=$(printf "0x%x" $((normbg_ + 0x202020)))
	updatedock mixer-dock $icon_ $color
}

low()
{
	local vol=$(($max_ * 25 / 100))

	volume "$vol" "$cid_"
	color=$(printf "0x%x" $((normbg_ + 0x404040)))
	updatedock mixer-dock $icon_ $color
}

med()
{
	local vol=$(($max_ * 50 / 100))

	volume "$vol" "$cid_"
	updatedock mixer-dock $icon_ $normfg_
}

high()
{
	local vol=$(($max_ * 75 / 100))

	volume "$vol" "$cid_"
	updatedock mixer-dock $icon_ $normfg_
}

max()
{
	volume "$max_" "$cid_"
	updatedock mixer-dock $icon_ $notebg_
}

# max out pcm and speaker and read master info

amixer controls | while read cid; do
	case $cid in
	*PCM*Playback*Volume*) default "$cid" ;;
	*Speaker*Playback*Volume*) default "$cid";;
	*Master*Playback*Volume*) amixer cget "$cid" > $inf_;;
	esac
done

# find out master playback

while read line; do
	case $line in
	numid*Master*Playback*Volume*) cid_=$line; break;;
	esac
done < $inf_

# find out max and cur values

IFS='='
while read v1 v2 v3 v4 v5 v6; do
	case $v1 in
	*:*values=[0-9]*) IFS='='; setcur $v1;;
	esac

	case $v6 in
	[0-9]*,step*) IFS=','; setmax $v6;;
	esac
done < $inf_

setpct

printf "\a\t$pct_\n" > $out_
printf "\a\tmute\n" >> $out_
printf "\a\tlow\n" >> $out_
printf "\a\tmed\n" >> $out_
printf "\a\thigh\n" >> $out_
printf "\a\tmax\n" >> $out_

# prompt user

IFS=$ifs_

startmenu -b -a -d $out_ | while read icon item arg; do
	case $arg in
	[0-9]*) custom $arg; exit 0;;
	esac

	case $item in
	mute) mute;;
	low) low;;
	med) med;;
	high) high;;
	max) max;;
	*) updatedock mixer-dock $icon_ $normfg_;;
	esac
done
